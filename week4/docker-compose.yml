version: '3'
services:
  opensearch-cl1-node1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: opensearch-cl1-node1
    environment:
      - cluster.name=cl1-leader
      - node.name=opensearch-cl1-node1
      - discovery.seed_hosts=opensearch-cl1-node1,opensearch-cl1-node2,opensearch-cl1-node3
      - cluster.initial_master_nodes=opensearch-cl1-node1,opensearch-cl1-node2
      - shard_indexing_pressure.enabled=true
      - shard_indexing_pressure.enforced=true
      - search_backpressure.mode=enforced
      - search_backpressure.search_task.cancellation_ratio=0.8
      - bootstrap.memory_lock=false # AP: so memlock bootstrap check will pass - since we can't memlock unlimited on GitPod
      - node.store.allow_mmap=false # AP: so vm.max_map_count bootstrap check will pass - but don't do in prod it degrades perf
      - path.repo=/usr/share/opensearch/snapshots
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data1-1:/usr/share/opensearch/data
      - opensearch-snapshots:/usr/share/opensearch/snapshots
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - opensearch-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB

  opensearch-cl1-node2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: opensearch-cl1-node2
    environment:
      - cluster.name=cl1-leader
      - node.name=opensearch-cl1-node2
      - discovery.seed_hosts=opensearch-cl1-node1,opensearch-cl1-node2,opensearch-cl1-node3
      - cluster.initial_master_nodes=opensearch-cl1-node1,opensearch-cl1-node2
      - shard_indexing_pressure.enabled=true
      - shard_indexing_pressure.enforced=true
      - search_backpressure.mode=enforced
      - search_backpressure.search_task.cancellation_ratio=0.8
      - bootstrap.memory_lock=false # AP: so memlock bootstrap check will pass - since we can't memlock unlimited on GitPod
      - node.store.allow_mmap=false # AP: so vm.max_map_count bootstrap check will pass - but don't do in prod it degrades perf
      - path.repo=/usr/share/opensearch/snapshots
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data1-2:/usr/share/opensearch/data
      - opensearch-snapshots:/usr/share/opensearch/snapshots
    networks:
      - opensearch-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB

  opensearch-cl1-node3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: opensearch-cl1-node3
    environment:
      - cluster.name=cl1-leader
      - node.name=opensearch-cl1-node3
      - discovery.seed_hosts=opensearch-cl1-node1,opensearch-cl1-node2,opensearch-cl1-node3
      - cluster.initial_master_nodes=opensearch-cl1-node1,opensearch-cl1-node2
      - shard_indexing_pressure.enabled=true
      - shard_indexing_pressure.enforced=true
      - search_backpressure.mode=enforced
      - search_backpressure.search_task.cancellation_ratio=0.8
      - bootstrap.memory_lock=false # AP: so memlock bootstrap check will pass - since we can't memlock unlimited on GitPod
      - node.store.allow_mmap=false # AP: so vm.max_map_count bootstrap check will pass - but don't do in prod it degrades perf
      - path.repo=/usr/share/opensearch/snapshots
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data1-3:/usr/share/opensearch/data
      - opensearch-snapshots:/usr/share/opensearch/snapshots
    networks:
      - opensearch-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB
  opensearch-cl2-node1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: opensearch-cl2-node1
    environment:
      - cluster.name=cl2-follower
      - node.name=opensearch-cl2-node1
      - discovery.seed_hosts=opensearch-cl2-node1,opensearch-cl2-node2,opensearch-cl2-node3
      - cluster.initial_master_nodes=opensearch-cl2-node1,opensearch-cl2-node2
      - bootstrap.memory_lock=false # AP: so memlock bootstrap check will pass - since we can't memlock unlimited on GitPod
      - node.store.allow_mmap=false # AP: so vm.max_map_count bootstrap check will pass - but don't do in prod it degrades perf
      - path.repo=/usr/share/opensearch/snapshots
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data2-1:/usr/share/opensearch/data
      - opensearch-snapshots:/usr/share/opensearch/snapshots
    ports:
      - 9201:9200
      - 9601:9600 # required for Performance Analyzer
    networks:
      - opensearch-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB
  opensearch-cl2-node2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: opensearch-cl2-node2
    environment:
      - cluster.name=cl2-follower
      - node.name=opensearch-cl2-node2
      - discovery.seed_hosts=opensearch-cl2-node1,opensearch-cl2-node2,opensearch-cl2-node3
      - cluster.initial_master_nodes=opensearch-cl2-node1,opensearch-cl2-node2
      - bootstrap.memory_lock=false # AP: so memlock bootstrap check will pass - since we can't memlock unlimited on GitPod
      - node.store.allow_mmap=false # AP: so vm.max_map_count bootstrap check will pass - but don't do in prod it degrades perf
      - path.repo=/usr/share/opensearch/snapshots
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2-2:/usr/share/opensearch/data
      - opensearch-snapshots:/usr/share/opensearch/snapshots
    networks:
      - opensearch-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB
  opensearch-cl2-node3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: opensearch-cl2-node3
    environment:
      - cluster.name=cl2-follower
      - node.name=opensearch-cl2-node3
      - discovery.seed_hosts=opensearch-cl2-node1,opensearch-cl2-node2,opensearch-cl2-node3
      - cluster.initial_master_nodes=opensearch-cl2-node1,opensearch-cl2-node2
      - bootstrap.memory_lock=false # AP: so memlock bootstrap check will pass - since we can't memlock unlimited on GitPod
      - node.store.allow_mmap=false # AP: so vm.max_map_count bootstrap check will pass - but don't do in prod it degrades perf
      - path.repo=/usr/share/opensearch/snapshots
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2-3:/usr/share/opensearch/data
      - opensearch-snapshots:/usr/share/opensearch/snapshots
    networks:
      - opensearch-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.6.0
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-cl1-node1:9200","https://opensearch-cl1-node2:9200","https://opensearch-cl1-node3:9200","https://opensearch-cl2-node1:9200","https://opensearch-cl2-node2:9200"],"https://opensearch-cl2-node3:9200"'
    networks:
      - opensearch-net

volumes:
  opensearch-data1-1:
  opensearch-data1-2:
  opensearch-data1-3:
  opensearch-data2-1:
  opensearch-data2-2:
  opensearch-data2-3:
  opensearch-snapshots:

# explicitly set name, otherwise the docker network name is prepended with the folder (project) name
networks:
  opensearch-net:
    name: opensearch-net
